name: Golang

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout code and setup Go
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      # Docker build & push
      - name: Build and Push Docker Image
        run: |
          docker build -t maverick8738/url-shortener:latest .
          docker push maverick8738/url-shortener:latest

      # AWS login and EKS cluster check
      - name: AWS Login
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Check If EKS Cluster Exists
        id: check-cluster
        run: |
          if aws eks describe-cluster --name url-shortener --region us-west-2 > /dev/null 2>&1; then
            echo "EKS cluster exists"
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "EKS cluster does not exist"
            echo "exists=false" >> $GITHUB_ENV
          fi

      # Terraform actions
      - name: Terraform Init and Apply (only if cluster doesn't exist)
        if: env.exists == 'false'
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve
        working-directory: terraform

      # Kubernetes Setup
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin
          kubectl version --client

      - name: Kube Config
        run: aws eks --region us-west-2 update-kubeconfig --name url-shortener

      # Deployment
      - name: Deployment to Kubernetes
        run: kubectl apply -f ./kubernetes
